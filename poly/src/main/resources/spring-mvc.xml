<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!--
		扫描这个包及子包所有扫描到有@Component,@Controller,@Service等这些注解的类
		<context:component-scan base-package="com.poly.work.action"/>
	-->
	<!-- use-default-filters="false"不扫描子包 -->
	<context:component-scan use-default-filters="false" base-package="com.poly.*.controller">
		<!-- 只扫描base-package指定下的有@Controller下的java类 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!--
		如何你的DispatcherServlet拦截 *.do这样的URL， 就不存在访问不到静态资源的问题。
		如果你的DispatcherServlet拦截“/”，拦截了所有的请求， 同时对*.js,*.jpg的访问也就被拦截了。
		这里可以解决访问静态资源被拦截的问题.
	-->
	<mvc:default-servlet-handler />

	<!--
		要使用spring mvc中的@Controller注解， 
		就必须要配置<mvc:annotation-driven />，
		否则DispatcherServlet无法找到控制器并把请求分发到控制器。
	-->
	<mvc:annotation-driven />

	<!-- controller中返回视图的配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<!-- action中return的页面的前缀 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<!-- action中return的页面的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

</beans>